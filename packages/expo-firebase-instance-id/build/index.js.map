{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAO,UAAU,EAAE,MAAM,mBAAmB,CAAC;AAEpD,MAAM,CAAC,MAAM,WAAW,GAAG,wBAAwB,CAAC;AACpD,MAAM,CAAC,MAAM,SAAS,GAAG,KAAK,CAAC;AAC/B,MAAM,CAAC,MAAM,OAAO,GAAG,EAAE,CAAC;AAE1B,MAAM,CAAC,OAAO,OAAO,UAAW,SAAQ,UAAU;IAKhD,YAAY,GAAQ;QAClB,KAAK,CAAC,GAAG,EAAE;YACT,mBAAmB,EAAE,KAAK;YAC1B,UAAU,EAAE,WAAW;YACvB,kBAAkB,EAAE,KAAK;YACzB,SAAS,EAAE,SAAS;SACrB,CAAC,CAAC;QAWL,8BAAyB,GAAG,CAAC,KAAc,EAAsB,EAAE;YACjE,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,EAAE,EAAE;gBAC1B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,iBAAiB,CAAC;aAC3C;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,mBAAc,GAAG,CAAC,KAAc,EAAsB,EAAE;YACtD,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,EAAE,EAAE;gBAC1B,OAAO,GAAG,CAAC;aACZ;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,aAAQ,GAAG,KAAK,EAAE,gBAAyB,EAAE,KAAc,EAAmB,EAAE;YAC9E,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CACrC,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,EAChD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAC3B,CAAC;QACJ,CAAC,CAAC;QAEF,gBAAW,GAAG,KAAK,EAAE,gBAAyB,EAAE,KAAc,EAAiB,EAAE;YAC/E,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CACxC,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,CAAC,EAChD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAC3B,CAAC;QACJ,CAAC,CAAC;IApCF,CAAC;IAED,KAAK,CAAC,MAAM;QACV,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,GAAG;QACP,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;IACvC,CAAC;;AAnBM,qBAAU,GAAG,WAAW,CAAC;AACzB,oBAAS,GAAG,SAAS,CAAC;AACtB,kBAAO,GAAG,OAAO,CAAC","sourcesContent":["import { App, ModuleBase } from 'expo-firebase-app';\n\nexport const MODULE_NAME = 'ExpoFirebaseInstanceID';\nexport const NAMESPACE = 'iid';\nexport const statics = {};\n\nexport default class InstanceId extends ModuleBase {\n  static moduleName = MODULE_NAME;\n  static namespace = NAMESPACE;\n  static statics = statics;\n\n  constructor(app: App) {\n    super(app, {\n      hasCustomUrlSupport: false,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      namespace: NAMESPACE,\n    });\n  }\n\n  async delete(): Promise<void> {\n    return await this.nativeModule.delete();\n  }\n\n  async get(): Promise<string> {\n    return await this.nativeModule.get();\n  }\n\n  _validateAuthorizedEntity = (token?: string): string | undefined => {\n    if (!token || token === '') {\n      return this.app.options.messagingSenderId;\n    }\n    return token;\n  };\n\n  _validateScope = (scope?: string): string | undefined => {\n    if (!scope || scope === '') {\n      return '*';\n    }\n    return scope;\n  };\n\n  getToken = async (authorizedEntity?: string, scope?: string): Promise<string> => {\n    return await this.nativeModule.getToken(\n      this._validateAuthorizedEntity(authorizedEntity),\n      this._validateScope(scope)\n    );\n  };\n\n  deleteToken = async (authorizedEntity?: string, scope?: string): Promise<void> => {\n    return await this.nativeModule.deleteToken(\n      this._validateAuthorizedEntity(authorizedEntity),\n      this._validateScope(scope)\n    );\n  };\n}\n"]}