{"version":3,"file":"OnDisconnect.js","sourceRoot":"","sources":["../src/OnDisconnect.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAQ1C,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;AAEzB;;;GAGG;AACH,MAAM,CAAC,OAAO,OAAO,YAAY;IAK/B;;;OAGG;IACH,YAAY,GAAc;QACxB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,GAAG,CAAC,KAAsB;QAC9B,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE;YAClE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC;YACnB,KAAK;SACN,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,MAAM,CAAC,MAAc;QACzB,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACjF,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,MAAM;QACV,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzE,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,MAAM;QACV,OAAO,MAAM,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzE,CAAC;CACF","sourcesContent":["import { utils } from 'expo-firebase-app';\n\n// import type Database from './index';\n// import type Reference from './Reference';\n\ntype Database = { [key: string]: any };\ntype Reference = { [key: string]: any };\n\nconst { typeOf } = utils;\n\n/**\n * @url https://firebase.google.com/docs/reference/js/firebase.database.OnDisconnect\n * @class OmDisconnect\n */\nexport default class OnDisconnect {\n  _database: Database;\n  ref: Reference;\n  path: string;\n\n  /**\n   *\n   * @param ref\n   */\n  constructor(ref: Reference) {\n    this.ref = ref;\n    this.path = ref.path;\n    this._database = ref._database;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.OnDisconnect#set\n   * @param value\n   * @returns {*}\n   */\n  async set(value: string | Object): Promise<void> {\n    return await this._database.nativeModule.onDisconnectSet(this.path, {\n      type: typeOf(value),\n      value,\n    });\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.OnDisconnect#update\n   * @param values\n   * @returns {*}\n   */\n  async update(values: Object): Promise<void> {\n    return await this._database.nativeModule.onDisconnectUpdate(this.path, values);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.OnDisconnect#remove\n   * @returns {*}\n   */\n  async remove(): Promise<void> {\n    return await this._database.nativeModule.onDisconnectRemove(this.path);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.OnDisconnect#cancel\n   * @returns {*}\n   */\n  async cancel(): Promise<void> {\n    return await this._database.nativeModule.onDisconnectCancel(this.path);\n  }\n}\n"]}