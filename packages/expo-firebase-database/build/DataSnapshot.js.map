{"version":3,"file":"DataSnapshot.js","sourceRoot":"","sources":["../src/DataSnapshot.ts"],"names":[],"mappings":"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","sourcesContent":["import { utils } from 'expo-firebase-app';\n// import type Reference from './Reference';\ntype Reference = any;\nconst { isObject, deepGet, deepExists } = utils;\n\n/**\n * @class DataSnapshot\n * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot\n */\nexport default class DataSnapshot {\n  ref: Reference;\n  key: string;\n\n  _value: any;\n  _priority: any;\n  _childKeys: Array<string>;\n\n  constructor(ref: Reference, snapshot: { [key: string]: any }) {\n    this.key = snapshot.key;\n\n    if (ref.key !== snapshot.key) {\n      this.ref = ref.child(snapshot.key);\n    } else {\n      this.ref = ref;\n    }\n\n    // internal use only\n    this._value = snapshot.value;\n    this._priority = snapshot.priority === undefined ? null : snapshot.priority;\n    this._childKeys = snapshot.childKeys || [];\n  }\n\n  /**\n   * Extracts a JavaScript value from a DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#val\n   * @returns {any}\n   */\n  val(): any {\n    // clone via JSON stringify/parse - prevent modification of this._value\n    if (isObject(this._value) || Array.isArray(this._value))\n      return JSON.parse(JSON.stringify(this._value));\n    return this._value;\n  }\n\n  /**\n   * Gets another DataSnapshot for the location at the specified relative path.\n   * @param path\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#forEach\n   * @returns {Snapshot}\n   */\n  child(path: string): DataSnapshot {\n    // TODO validate path is a string\n    let value = deepGet(this._value, path);\n    if (value === undefined) value = null;\n    const childRef = this.ref.child(path);\n    return new DataSnapshot(childRef, {\n      value,\n      key: childRef.key,\n      exists: value !== null,\n\n      // TODO this is wrong - child keys needs to be the ordered keys, from FB\n      // TODO potential solution is build up a tree/map of a snapshot and its children\n      // TODO natively and send that back to JS to be use in this class.\n\n      // null check to keep flow happy even though isObject already does this\n      childKeys: isObject(value) && value !== null ? Object.keys(value) : [],\n    });\n  }\n\n  /**\n   * Returns true if this DataSnapshot contains any data.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#exists\n   * @returns {boolean}\n   */\n  exists(): boolean {\n    return this._value !== null;\n  }\n\n  /**\n   * Enumerates the top-level children in the DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#forEach\n   * @param action\n   */\n  forEach(action: (key: any) => any): boolean {\n    if (!this._childKeys.length) return false;\n    let cancelled = false;\n\n    for (let i = 0, len = this._childKeys.length; i < len; i++) {\n      const key = this._childKeys[i];\n      const childSnapshot = this.child(key);\n      const returnValue = action(childSnapshot);\n\n      if (returnValue === true) {\n        cancelled = true;\n        break;\n      }\n    }\n\n    return cancelled;\n  }\n\n  /**\n   * Gets the priority value of the data in this DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#getPriority\n   * @returns {String|Number|null}\n   */\n  getPriority(): string | number | null {\n    return this._priority;\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#hasChild\n   * @param path\n   * @returns {Boolean}\n   */\n  hasChild(path: string): boolean {\n    return deepExists(this._value, path);\n  }\n\n  /**\n   * Returns whether or not the DataSnapshot has any non-null child properties.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#hasChildren\n   * @returns {boolean}\n   */\n  hasChildren(): boolean {\n    return this.numChildren() > 0;\n  }\n\n  /**\n   * Returns the number of child properties of this DataSnapshot.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#numChildren\n   * @returns {Number}\n   */\n  numChildren(): number {\n    if (!isObject(this._value)) return 0;\n    return Object.keys(this._value).length;\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.DataSnapshot#toJSON\n   * @returns {any}\n   */\n  toJSON(): Object {\n    return this.val();\n  }\n}\n"]}