{"version":3,"file":"Reference.js","sourceRoot":"","sources":["../src/Reference.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,KAAK,EAAiB,MAAM,mBAAmB,CAAC;AACxE,OAAO,SAAS,MAAM,WAAW,CAAC;AAElC,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAC1C,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAC1C,OAAO,KAAK,MAAM,SAAS,CAAC;AAC5B,OAAO,QAAQ,MAAM,YAAY,CAAC;AAMlC,MAAM,EACJ,iBAAiB,EACjB,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,YAAY,EACZ,gBAAgB,EAChB,cAAc,GACf,GAAG,KAAK,CAAC;AAEV,wCAAwC;AACxC,IAAI,SAAS,GAAG,CAAC,CAAC;AAElB;;;;GAIG;AACH,IAAK,mBAMJ;AAND,WAAK,mBAAmB;IACtB,sCAAe,CAAA;IACf,kDAA2B,CAAA;IAC3B,sDAA+B,CAAA;IAC/B,sDAA+B,CAAA;IAC/B,kDAA2B,CAAA;AAC7B,CAAC,EANI,mBAAmB,KAAnB,mBAAmB,QAMvB;AASD;;;;;;;;;GASG;AAEH;;;GAGG;AAEH;;;;;;;;;;GAUG;AACH,MAAM,CAAC,OAAO,OAAO,SAAU,SAAQ,aAAa;IAMlD,YAAY,QAAkB,EAAE,IAAY,EAAE,iBAAsC;QAClF,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;QACjD,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IACpE,CAAC;IAED;;;;;;;;;OASG;IACH,UAAU,CAAC,IAAa;QACtB,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,CAC3C,IAAI,CAAC,UAAU,EAAE,EACjB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,EAC1B,IAAI,CACL,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,GAAG,CAAC,KAAU,EAAE,UAAqB;QACzC,OAAO,iBAAiB,CACtB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,EACzE,UAAU,CACX,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,WAAW,CAAC,QAAgC,EAAE,UAAqB;QACvE,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAEnD,OAAO,iBAAiB,CACtB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,EAC7D,UAAU,CACX,CAAC;IACJ,CAAC;IAED;;;;;;;;OAQG;IACH,KAAK,CAAC,eAAe,CACnB,KAAU,EACV,QAAgC,EAChC,UAAqB;QAErB,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAEnD,OAAO,iBAAiB,CACtB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,EACzE,UAAU,CACX,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,MAAM,CAAC,GAAW,EAAE,UAAqB;QAC7C,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;QAEzC,OAAO,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC;IAC7F,CAAC;IAED;;;;;;OAMG;IACH,KAAK,CAAC,MAAM,CAAC,UAAqB;QAChC,OAAO,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC;IACtF,CAAC;IAED;;;;;;;OAOG;IACH,WAAW,CACT,iBAA2B,EAC3B,UAA4F,EAC5F,eAAwB,KAAK;QAE7B,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAE;YAClC,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC,CAAC;SAClF;QAED,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,MAAM,iBAAiB,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,YAAY,EAAE,EAAE;gBAC3D,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE;oBAC1B,IAAI,KAAK,EAAE;wBACT,UAAU,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;qBACpC;yBAAM;wBACL,UAAU,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;qBACnE;iBACF;gBAED,IAAI,KAAK;oBAAE,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChC,OAAO,OAAO,CAAC;oBACb,SAAS;oBACT,QAAQ,EAAE,IAAI,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC;iBAC/C,CAAC,CAAC;YACL,CAAC,CAAC;YAEF,iCAAiC;YACjC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG,CACpC,IAAI,EACJ,iBAAiB,EACjB,iBAAiB,EACjB,YAAY,CACb,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;;;OAOG;IACH,IAAI,CACF,YAAoB,OAAO,EAC3B,eAAiD,EACjD,eAA+C,EAC/C,OAAgB;QAEhB,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY;aAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,SAAS,CAAC;aACzE,IAAI,CAAC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;YACrB,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAEnD,IAAI,UAAU,CAAC,eAAe,CAAC,EAAE;gBAC/B,IAAI,QAAQ,CAAC,eAAe,CAAC;oBAAE,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,CAAC;gBAChF,IAAI,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC;oBAAE,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC;gBAC3E,eAAe,CAAC,SAAS,CAAC,CAAC;aAC5B;YAED,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC;aACD,KAAK,CAAC,KAAK,CAAC,EAAE;YACb,IAAI,UAAU,CAAC,eAAe,CAAC;gBAAE,OAAO,eAAe,CAAC,KAAK,CAAC,CAAC;YAC/D,MAAM,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;;OAKG;IACH,IAAI,CAAC,KAAU,EAAE,UAAqB;QACpC,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;YACzC,OAAO,IAAI,iBAAiB,CAC1B,IAAI,CAAC,SAAS,EACd,GAAG,IAAI,CAAC,IAAI,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,CACnE,CAAC;SACH;QAED,MAAM,MAAM,GAAG,IAAI,iBAAiB,CAClC,IAAI,CAAC,SAAS,EACd,GAAG,IAAI,CAAC,IAAI,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,CACnE,CAAC;QACF,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAElC,uEAAuE;QACvE,IAAI,UAAU,IAAI,OAAO,UAAU,KAAK,UAAU,EAAE;YAClD,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAQ,CAAC;SACpG;QAED,kEAAkE;QAClE,gBAAgB;QAChB,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAC7B,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IAEH;;;OAGG;IACH,UAAU;QACR,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IACpC,CAAC;IAED;;;OAGG;IACH,eAAe;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACzC,CAAC;IAED;;;OAGG;IACH,YAAY;QACV,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IACtC,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAC,GAAW;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;IAC3C,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,IAAY,EAAE,GAAY;QAChC,MAAM,MAAM,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;QACpF,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QACjC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IAEH;;;;OAIG;IACH,WAAW,CAAC,KAAa;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAC,KAAa;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,IAAY,EAAE,KAAa;QAC/B,MAAM,MAAM,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;QACpF,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACjC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IAEH;;;;;OAKG;IACH,OAAO,CAAC,KAAU,EAAE,GAAY;QAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IAC5C,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,KAAU,EAAE,GAAY;QAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACH,OAAO,CAAC,KAAU,EAAE,GAAY;QAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IAC5C,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,IAAY,EAAE,KAAU,EAAE,GAAY;QAC3C,MAAM,MAAM,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;QACpF,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;QACvC,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;OAGG;IACH,YAAY;QACV,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,IAAY;QAChB,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED;;;OAGG;IACH,QAAQ;QACN,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;IACtD,CAAC;IAED;;;;;;;OAOG;IACH,OAAO,CAAC,QAAmB;QACzB,OAAO,CACL,CAAC,CAAC,QAAQ;YACV,QAAQ,CAAC,WAAW,KAAK,SAAS;YAClC,QAAQ,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG;YACzB,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,KAAK,QAAQ,CAAC,MAAM,CAAC,eAAe,EAAE,CACpE,CAAC;IACJ,CAAC;IAED;;OAEG;IAEH;;;;;OAKG;IACH,IAAI,MAAM;QACR,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG;YAAE,OAAO,IAAI,CAAC;QACnC,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3F,CAAC;IAED;;;;;OAKG;IACH,IAAI,GAAG;QACL,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;OAKG;IACH,IAAI,IAAI;QACN,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC5C,CAAC;IAED;;;OAGG;IACH,IAAI,CAAC,SAA8B,EAAE,QAA6B;QAChE,IAAI,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YAChE,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAC3C,MAAM,CAAC,EAAE;gBACP,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC;YAC3B,CAAC,EACD,WAAW,CAAC,EAAE;gBACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAErB,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;oBACxB,OAAO,QAAQ,CAAC,WAAW,CAAC,CAAC;iBAC9B;gBAED,MAAM,WAAW,CAAC;YACpB,CAAC,CACF,CAAC;SACH;QAED,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;IAC/D,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,QAA6B;QACjC,IAAI,UAAU,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YAChE,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE;gBAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,OAAO,QAAQ,CAAC,WAAW,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;SACJ;QAED,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;IAChE,CAAC;IAED;;OAEG;IAEH;;;;OAIG;IACH,mBAAmB,CAAC,SAAiB;QACnC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,KACnC,IAAI,CAAC,IACP,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,SAAS,IAAI,SAAS,EAAE,CAAC;IAChE,CAAC;IAED;;;;;;OAMG;IACH,UAAU;QACR,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE,CAAC;IACzF,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAC,OAAqB;QAChC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;IAED;;;;;OAKG;IACH,gBAAgB,CAAC,GAAW;QAC1B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YAAE,OAAO,GAAG,CAAC;QAE/B,mEAAmE;QACnE,uDAAuD;QACvD,OAAO,YAAY,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED;;;;;OAKG;IACH,iBAAiB,CAAC,KAAU;QAC1B,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;YACnB,OAAO;gBACL,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;aACpC,CAAC;SACH;QAED,OAAO;YACL,IAAI,EAAE,OAAO,KAAK;YAClB,KAAK;SACN,CAAC;IACJ,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;;;;OAyBG;IACH,EAAE,CACA,SAAiB,EACjB,QAAyC,EACzC,uBAAmD,EACnD,OAAa;QAEb,SAAS,CAAC,SAAS,EAAE,wEAAwE,CAAC,CAAC;QAE/F,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,EAAE;YAC3D,MAAM,IAAI,KAAK,CACb,uEAAuE,MAAM,CAAC,IAAI,CAChF,mBAAmB,CACpB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAChB,CAAC;SACH;QAED,SAAS,CAAC,QAAQ,EAAE,uEAAuE,CAAC,CAAC;QAC7F,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,4DAA4D,CAAC,CAAC;QAE9F,IACE,uBAAuB;YACvB,CAAC,UAAU,CAAC,uBAAuB,CAAC;YACpC,CAAC,QAAQ,CAAC,OAAO,CAAC;YAClB,CAAC,QAAQ,CAAC,uBAAuB,CAAC,EAClC;YACA,MAAM,IAAI,KAAK,CACb,8HAA8H,CAC/H,CAAC;SACH;QAED,IAAI,uBAAuB,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC,IAAI,OAAO,EAAE;YAC9E,MAAM,IAAI,KAAK,CACb,8HAA8H,CAC/H,CAAC;SACH;QAED,MAAM,oBAAoB,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QACjE,MAAM,2BAA2B,GAAG,GAAG,oBAAoB,YAAY,CAAC;QACxE,MAAM,QAAQ,GACZ,uBAAuB,IAAI,CAAC,UAAU,CAAC,uBAAuB,CAAC;YAC7D,CAAC,CAAC,uBAAuB;YACzB,CAAC,CAAC,OAAO,CAAC;QACd,MAAM,eAAe,GAAG;YACtB,SAAS;YACT,GAAG,EAAE,IAAI;YACT,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE;YACtB,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI;YAChC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW;YACjC,oBAAoB;SACrB,CAAC;QAEF,QAAQ,CAAC,eAAe,CAAC;YACvB,GAAG,eAAe;YAClB,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ;SACxD,CAAC,CAAC;QAEH,IAAI,uBAAuB,IAAI,UAAU,CAAC,uBAAuB,CAAC,EAAE;YAClE,qDAAqD;YACrD,0DAA0D;YAC1D,iEAAiE;YACjE,QAAQ,CAAC,eAAe,CAAC;gBACvB,GAAG,EAAE,IAAI;gBACT,IAAI,EAAE,IAAI;gBACV,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE;gBACtB,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI;gBAChC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW;gBACjC,SAAS,EAAE,GAAG,SAAS,YAAY;gBACnC,oBAAoB,EAAE,2BAA2B;gBACjD,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,uBAAuB;aACtF,CAAC,CAAC;SACJ;QAED,0DAA0D;QAC1D,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC;YAC7B,SAAS;YACT,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE;YACtB,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI;YAChC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;YACrC,uBAAuB,EAAE,UAAU,CAAC,uBAAuB,CAAC;YAC5D,YAAY,EAAE;gBACZ,oBAAoB;gBACpB,GAAG,EAAE,eAAe,CAAC,GAAG;gBACxB,2BAA2B;aAC5B;SACF,CAAC,CAAC;QAEH,6DAA6D;QAC7D,2CAA2C;QAC3C,SAAS,IAAI,CAAC,CAAC;QAEf,8CAA8C;QAC9C,oEAAoE;QACpE,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;;;;;;;;;;;;;OAcG;IACH,GAAG,CAAC,YAAoB,EAAE,EAAE,gBAA4B;QACtD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACrB,iBAAiB;YACjB,iGAAiG;YACjG,OAAO,QAAQ,CAAC,+BAA+B,CAAC,QAAQ,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC7F;QAED;;WAEG;QACH,IAAI,SAAS,IAAI,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,EAAE;YAC1E,MAAM,IAAI,KAAK,CACb,wEAAwE,MAAM,CAAC,IAAI,CACjF,mBAAmB,CACpB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAChB,CAAC;SACH;QAED,IAAI,gBAAgB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE;YACrD,MAAM,IAAI,KAAK,CACb,sGAAsG,CACvG,CAAC;SACH;QAED,iBAAiB;QACjB,mCAAmC;QACnC,uFAAuF;QACvF,gFAAgF;QAChF,2BAA2B;QAC3B,oCAAoC;QACpC,IAAI,SAAS,IAAI,gBAAgB,EAAE;YACjC,MAAM,YAAY,GAAG,QAAQ,CAAC,yBAAyB,CACrD,IAAI,CAAC,IAAI,EACT,SAAS,EACT,gBAAgB,CACjB,CAAC;YACF,IAAI,CAAC,YAAY;gBAAE,OAAO,EAAE,CAAC;YAE7B,2DAA2D;YAC3D,QAAQ,CAAC,+BAA+B,CAAC,CAAC,GAAG,YAAY,YAAY,CAAC,CAAC,CAAC;YAExE,+DAA+D;YAC/D,uDAAuD;YACvD,OAAO,QAAQ,CAAC,2BAA2B,CAAC,gBAAgB,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;SAC/E;QAED,iBAAiB;QACjB,iGAAiG;QACjG,MAAM,aAAa,GAAG,QAAQ,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAEjF,QAAQ,CAAC,+BAA+B,CACtC,QAAQ,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,SAAS,YAAY,CAAC,CAC1E,CAAC;QAEF,OAAO,QAAQ,CAAC,+BAA+B,CAAC,aAAa,CAAC,CAAC;IACjE,CAAC;CACF","sourcesContent":["import { ReferenceBase, utils, FirebaseError } from 'expo-firebase-app';\nimport invariant from 'invariant';\n\nimport DataSnapshot from './DataSnapshot';\nimport OnDisconnect from './OnDisconnect';\nimport Query from './Query';\nimport SyncTree from './SyncTree';\n// import type Database from './index';\nimport { DatabaseModifier } from './types';\n\ntype Database = { [key: string]: any };\n\nconst {\n  promiseOrCallback,\n  isFunction,\n  isObject,\n  isString,\n  tryJSONParse,\n  tryJSONStringify,\n  generatePushID,\n} = utils;\n\n// track all event registrations by path\nlet listeners = 0;\n\n/**\n * Enum for event types\n * @readonly\n * @enum {String}\n */\nenum ReferenceEventTypes {\n  value = 'value',\n  child_added = 'child_added',\n  child_removed = 'child_removed',\n  child_changed = 'child_changed',\n  child_moved = 'child_moved',\n}\n\ntype DatabaseListener = {\n  listenerId: number;\n  eventName: string;\n  successCallback: Function;\n  failureCallback?: Function;\n};\n\n/**\n * @typedef {String} ReferenceLocation - Path to location in the database, relative\n * to the root reference. Consists of a path where segments are separated by a\n * forward slash (/) and ends in a ReferenceKey - except the root location, which\n * has no ReferenceKey.\n *\n * @example\n * // root reference location: '/'\n * // non-root reference: '/path/to/referenceKey'\n */\n\n/**\n * @typedef {String} ReferenceKey - Identifier for each location that is unique to that\n * location, within the scope of its parent. The last part of a ReferenceLocation.\n */\n\n/**\n * Represents a specific location in your Database that can be used for\n * reading or writing data.\n *\n * You can reference the root using firebase.database().ref() or a child location\n * by calling firebase.database().ref(\"child/path\").\n *\n * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference\n * @class Reference\n * @extends ReferenceBase\n */\nexport default class Reference extends ReferenceBase {\n  _database: Database;\n  _promise: Promise<any> | null;\n  _query: Query;\n  _refListeners: { [listenerId: number]: DatabaseListener };\n\n  constructor(database: Database, path: string, existingModifiers?: DatabaseModifier[]) {\n    super(path);\n    this._promise = null;\n    this._refListeners = {};\n    this._database = database;\n    this._query = new Query(this, existingModifiers);\n    database.logger.debug('Created new Reference', this._getRefKey());\n  }\n\n  /**\n   * By calling `keepSynced(true)` on a location, the data for that location will\n   * automatically be downloaded and kept in sync, even when no listeners are\n   * attached for that location. Additionally, while a location is kept synced,\n   *  it will not be evicted from the persistent disk cache.\n   *\n   * @link https://firebase.google.com/docs/reference/android/com/google/firebase/database/Query.html#keepSynced(boolean)\n   * @param bool\n   * @returns {*}\n   */\n  keepSynced(bool: boolean): Promise<void> {\n    return this._database.nativeModule.keepSynced(\n      this._getRefKey(),\n      this.path,\n      this._query.getModifiers(),\n      bool\n    );\n  }\n\n  /**\n   * Writes data to this Database location.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#set\n   * @param value\n   * @param onComplete\n   * @returns {Promise}\n   */\n  async set(value: any, onComplete?: Function): Promise<void> {\n    return promiseOrCallback(\n      this._database.nativeModule.set(this.path, this._serializeAnyType(value)),\n      onComplete\n    );\n  }\n\n  /**\n   * Sets a priority for the data at this Database location.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#setPriority\n   * @param priority\n   * @param onComplete\n   * @returns {Promise}\n   */\n  async setPriority(priority: string | number | null, onComplete?: Function): Promise<void> {\n    const _priority = this._serializeAnyType(priority);\n\n    return promiseOrCallback(\n      this._database.nativeModule.setPriority(this.path, _priority),\n      onComplete\n    );\n  }\n\n  /**\n   * Writes data the Database location. Like set() but also specifies the priority for that data.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#setWithPriority\n   * @param value\n   * @param priority\n   * @param onComplete\n   * @returns {Promise}\n   */\n  async setWithPriority(\n    value: any,\n    priority: string | number | null,\n    onComplete?: Function\n  ): Promise<void> {\n    const _value = this._serializeAnyType(value);\n    const _priority = this._serializeAnyType(priority);\n\n    return promiseOrCallback(\n      this._database.nativeModule.setWithPriority(this.path, _value, _priority),\n      onComplete\n    );\n  }\n\n  /**\n   * Writes multiple values to the Database at once.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#update\n   * @param val\n   * @param onComplete\n   * @returns {Promise}\n   */\n  async update(val: Object, onComplete?: Function): Promise<void> {\n    const value = this._serializeObject(val);\n\n    return promiseOrCallback(this._database.nativeModule.update(this.path, value), onComplete);\n  }\n\n  /**\n   * Removes the data at this Database location.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#remove\n   * @param onComplete\n   * @return {Promise}\n   */\n  async remove(onComplete?: Function): Promise<void> {\n    return promiseOrCallback(this._database.nativeModule.remove(this.path), onComplete);\n  }\n\n  /**\n   * Atomically modifies the data at this location.\n   *\n   * @link https://firebase.google.com/docs/reference/js/firebase.database.Reference#transaction\n   * @param transactionUpdate\n   * @param onComplete\n   * @param applyLocally\n   */\n  transaction(\n    transactionUpdate: Function,\n    onComplete: (error: Error | null, committed: boolean, snapshot?: DataSnapshot | null) => any,\n    applyLocally: boolean = false\n  ) {\n    if (!isFunction(transactionUpdate)) {\n      return Promise.reject(new Error('Missing transactionUpdate function argument.'));\n    }\n\n    return new Promise((resolve, reject) => {\n      const onCompleteWrapper = (error, committed, snapshotData) => {\n        if (isFunction(onComplete)) {\n          if (error) {\n            onComplete(error, committed, null);\n          } else {\n            onComplete(null, committed, new DataSnapshot(this, snapshotData));\n          }\n        }\n\n        if (error) return reject(error);\n        return resolve({\n          committed,\n          snapshot: new DataSnapshot(this, snapshotData),\n        });\n      };\n\n      // start the transaction natively\n      this._database._transactionHandler.add(\n        this,\n        transactionUpdate,\n        onCompleteWrapper,\n        applyLocally\n      );\n    });\n  }\n\n  /**\n   *\n   * @param eventName\n   * @param successCallback\n   * @param cancelOrContext\n   * @param context\n   * @returns {Promise.<any>}\n   */\n  once(\n    eventName: string = 'value',\n    successCallback: (snapshot: DataSnapshot) => void,\n    cancelOrContext: (error: FirebaseError) => void,\n    context?: Object\n  ) {\n    return this._database.nativeModule\n      .once(this._getRefKey(), this.path, this._query.getModifiers(), eventName)\n      .then(({ snapshot }) => {\n        const _snapshot = new DataSnapshot(this, snapshot);\n\n        if (isFunction(successCallback)) {\n          if (isObject(cancelOrContext)) successCallback.bind(cancelOrContext)(_snapshot);\n          if (context && isObject(context)) successCallback.bind(context)(_snapshot);\n          successCallback(_snapshot);\n        }\n\n        return _snapshot;\n      })\n      .catch(error => {\n        if (isFunction(cancelOrContext)) return cancelOrContext(error);\n        throw error;\n      });\n  }\n\n  /**\n   *\n   * @param value\n   * @param onComplete\n   * @returns {*}\n   */\n  push(value: any, onComplete?: Function): ThenableReference<{}> {\n    if (value === null || value === undefined) {\n      return new ThenableReference(\n        this._database,\n        `${this.path}/${generatePushID(this._database._serverTimeOffset)}`\n      );\n    }\n\n    const newRef = new ThenableReference(\n      this._database,\n      `${this.path}/${generatePushID(this._database._serverTimeOffset)}`\n    );\n    const promise = newRef.set(value);\n\n    // if callback provided then internally call the set promise with value\n    if (onComplete && typeof onComplete === 'function') {\n      return promise.then(() => onComplete(null, newRef)).catch(error => onComplete(error, null)) as any;\n    }\n\n    // otherwise attach promise to 'thenable' reference and return the\n    // new reference\n    newRef._setThenable(promise);\n    return newRef;\n  }\n\n  /**\n   * MODIFIERS\n   */\n\n  /**\n   *\n   * @returns {Reference}\n   */\n  orderByKey(): Reference {\n    return this.orderBy('orderByKey');\n  }\n\n  /**\n   *\n   * @returns {Reference}\n   */\n  orderByPriority(): Reference {\n    return this.orderBy('orderByPriority');\n  }\n\n  /**\n   *\n   * @returns {Reference}\n   */\n  orderByValue(): Reference {\n    return this.orderBy('orderByValue');\n  }\n\n  /**\n   *\n   * @param key\n   * @returns {Reference}\n   */\n  orderByChild(key: string): Reference {\n    return this.orderBy('orderByChild', key);\n  }\n\n  /**\n   *\n   * @param name\n   * @param key\n   * @returns {Reference}\n   */\n  orderBy(name: string, key?: string): Reference {\n    const newRef = new Reference(this._database, this.path, this._query.getModifiers());\n    newRef._query.orderBy(name, key);\n    return newRef;\n  }\n\n  /**\n   * LIMITS\n   */\n\n  /**\n   *\n   * @param limit\n   * @returns {Reference}\n   */\n  limitToLast(limit: number): Reference {\n    return this.limit('limitToLast', limit);\n  }\n\n  /**\n   *\n   * @param limit\n   * @returns {Reference}\n   */\n  limitToFirst(limit: number): Reference {\n    return this.limit('limitToFirst', limit);\n  }\n\n  /**\n   *\n   * @param name\n   * @param limit\n   * @returns {Reference}\n   */\n  limit(name: string, limit: number): Reference {\n    const newRef = new Reference(this._database, this.path, this._query.getModifiers());\n    newRef._query.limit(name, limit);\n    return newRef;\n  }\n\n  /**\n   * FILTERS\n   */\n\n  /**\n   *\n   * @param value\n   * @param key\n   * @returns {Reference}\n   */\n  equalTo(value: any, key?: string): Reference {\n    return this.filter('equalTo', value, key);\n  }\n\n  /**\n   *\n   * @param value\n   * @param key\n   * @returns {Reference}\n   */\n  endAt(value: any, key?: string): Reference {\n    return this.filter('endAt', value, key);\n  }\n\n  /**\n   *\n   * @param value\n   * @param key\n   * @returns {Reference}\n   */\n  startAt(value: any, key?: string): Reference {\n    return this.filter('startAt', value, key);\n  }\n\n  /**\n   *\n   * @param name\n   * @param value\n   * @param key\n   * @returns {Reference}\n   */\n  filter(name: string, value: any, key?: string): Reference {\n    const newRef = new Reference(this._database, this.path, this._query.getModifiers());\n    newRef._query.filter(name, value, key);\n    return newRef;\n  }\n\n  /**\n   *\n   * @returns {OnDisconnect}\n   */\n  onDisconnect(): OnDisconnect {\n    return new OnDisconnect(this);\n  }\n\n  /**\n   * Creates a Reference to a child of the current Reference, using a relative path.\n   * No validation is performed on the path to ensure it has a valid format.\n   * @param {String} path relative to current ref's location\n   * @returns {!Reference} A new Reference to the path provided, relative to the current\n   * Reference\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#child}\n   */\n  child(path: string): Reference {\n    return new Reference(this._database, `${this.path}/${path}`);\n  }\n\n  /**\n   * Return the ref as a path string\n   * @returns {string}\n   */\n  toString(): string {\n    return `${this._database.databaseUrl}/${this.path}`;\n  }\n\n  /**\n   * Returns whether another Reference represent the same location and are from the\n   * same instance of firebase.app.App - multiple firebase apps not currently supported.\n   * @param {Reference} otherRef - Other reference to compare to this one\n   * @return {Boolean} Whether otherReference is equal to this one\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#isEqual}\n   */\n  isEqual(otherRef: Reference): boolean {\n    return (\n      !!otherRef &&\n      otherRef.constructor === Reference &&\n      otherRef.key === this.key &&\n      this._query.queryIdentifier() === otherRef._query.queryIdentifier()\n    );\n  }\n\n  /**\n   * GETTERS\n   */\n\n  /**\n   * The parent location of a Reference, or null for the root Reference.\n   * @type {Reference}\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#parent}\n   */\n  get parent(): Reference | null {\n    if (this.path === '/') return null;\n    return new Reference(this._database, this.path.substring(0, this.path.lastIndexOf('/')));\n  }\n\n  /**\n   * A reference to itself\n   * @type {!Reference}\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#ref}\n   */\n  get ref(): Reference {\n    return this;\n  }\n\n  /**\n   * Reference to the root of the database: '/'\n   * @type {!Reference}\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#root}\n   */\n  get root(): Reference {\n    return new Reference(this._database, '/');\n  }\n\n  /**\n   * Access then method of promise if set\n   * @return {*}\n   */\n  then(fnResolve: (value: any) => any, fnReject: (value: any) => any) {\n    if (isFunction(fnResolve) && this._promise && this._promise.then) {\n      return this._promise.then.bind(this._promise)(\n        result => {\n          this._promise = null;\n          return fnResolve(result);\n        },\n        possibleErr => {\n          this._promise = null;\n\n          if (isFunction(fnReject)) {\n            return fnReject(possibleErr);\n          }\n\n          throw possibleErr;\n        }\n      );\n    }\n\n    throw new Error(\"Cannot read property 'then' of undefined.\");\n  }\n\n  /**\n   * Access catch method of promise if set\n   * @return {*}\n   */\n  catch(fnReject: (value: any) => any) {\n    if (isFunction(fnReject) && this._promise && this._promise.catch) {\n      return this._promise.catch.bind(this._promise)(possibleErr => {\n        this._promise = null;\n        return fnReject(possibleErr);\n      });\n    }\n\n    throw new Error(\"Cannot read property 'catch' of undefined.\");\n  }\n\n  /**\n   * INTERNALS\n   */\n\n  /**\n   * Generate a unique registration key.\n   *\n   * @return {string}\n   */\n  _getRegistrationKey(eventType: string): string {\n    return `$${this._database.databaseUrl}$/${\n      this.path\n    }$${this._query.queryIdentifier()}$${listeners}$${eventType}`;\n  }\n\n  /**\n   * Generate a string that uniquely identifies this\n   * combination of path and query modifiers\n   *\n   * @return {string}\n   * @private\n   */\n  _getRefKey() {\n    return `$${this._database.databaseUrl}$/${this.path}$${this._query.queryIdentifier()}`;\n  }\n\n  /**\n   * Set the promise this 'thenable' reference relates to\n   * @param promise\n   * @private\n   */\n  _setThenable(promise: Promise<any>) {\n    this._promise = promise;\n  }\n\n  /**\n   *\n   * @param obj\n   * @returns {Object}\n   * @private\n   */\n  _serializeObject(obj: Object) {\n    if (!isObject(obj)) return obj;\n\n    // json stringify then parse it calls toString on Objects / Classes\n    // that support it i.e new Date() becomes a ISO string.\n    return tryJSONParse(tryJSONStringify(obj));\n  }\n\n  /**\n   *\n   * @param value\n   * @returns {*}\n   * @private\n   */\n  _serializeAnyType(value: any) {\n    if (isObject(value)) {\n      return {\n        type: 'object',\n        value: this._serializeObject(value),\n      };\n    }\n\n    return {\n      type: typeof value,\n      value,\n    };\n  }\n\n  /**\n   * Register a listener for data changes at the current ref's location.\n   * The primary method of reading data from a Database.\n   *\n   * Listeners can be unbound using {@link off}.\n   *\n   * Event Types:\n   *\n   * - value: {@link callback}.\n   * - child_added: {@link callback}\n   * - child_removed: {@link callback}\n   * - child_changed: {@link callback}\n   * - child_moved: {@link callback}\n   *\n   * @param {ReferenceEventType} eventType - Type of event to attach a callback for.\n   * @param {ReferenceEventCallback} callback - Function that will be called\n   * when the event occurs with the new data.\n   * @param {cancelCallbackOrContext=} cancelCallbackOrContext - Optional callback that is called\n   * if the event subscription fails. {@link cancelCallbackOrContext}\n   * @param {*=} context - Optional object to bind the callbacks to when calling them.\n   * @returns {ReferenceEventCallback} callback function, unmodified (unbound), for\n   * convenience if you want to pass an inline function to on() and store it later for\n   * removing using off().\n   *\n   * {@link https://firebase.google.com/docs/reference/js/firebase.database.Reference#on}\n   */\n  on(\n    eventType: string,\n    callback: (snapshot: DataSnapshot) => any,\n    cancelCallbackOrContext?: (value: any) => any | any,\n    context?: any\n  ): Function {\n    invariant(eventType, 'Query.on failed: Function called with 0 arguments. Expects at least 2.');\n\n    if (!isString(eventType) || !ReferenceEventTypes[eventType]) {\n      throw new Error(\n        `Query.on failed: First argument must be a valid string event type: \"${Object.keys(\n          ReferenceEventTypes\n        ).join(', ')}\"`\n      );\n    }\n\n    invariant(callback, 'Query.on failed: Function called with 1 argument. Expects at least 2.');\n    invariant(isFunction(callback), 'Query.on failed: Second argument must be a valid function.');\n\n    if (\n      cancelCallbackOrContext &&\n      !isFunction(cancelCallbackOrContext) &&\n      !isObject(context) &&\n      !isObject(cancelCallbackOrContext)\n    ) {\n      throw new Error(\n        'Query.on failed: Function called with 3 arguments, but third optional argument `cancelCallbackOrContext` was not a function.'\n      );\n    }\n\n    if (cancelCallbackOrContext && !isFunction(cancelCallbackOrContext) && context) {\n      throw new Error(\n        'Query.on failed: Function called with 4 arguments, but third optional argument `cancelCallbackOrContext` was not a function.'\n      );\n    }\n\n    const eventRegistrationKey = this._getRegistrationKey(eventType);\n    const registrationCancellationKey = `${eventRegistrationKey}$cancelled`;\n    const _context =\n      cancelCallbackOrContext && !isFunction(cancelCallbackOrContext)\n        ? cancelCallbackOrContext\n        : context;\n    const registrationObj = {\n      eventType,\n      ref: this,\n      path: this.path,\n      key: this._getRefKey(),\n      appName: this._database.app.name,\n      dbURL: this._database.databaseUrl,\n      eventRegistrationKey,\n    };\n\n    SyncTree.addRegistration({\n      ...registrationObj,\n      listener: _context ? callback.bind(_context) : callback,\n    });\n\n    if (cancelCallbackOrContext && isFunction(cancelCallbackOrContext)) {\n      // cancellations have their own separate registration\n      // as these are one off events, and they're not guaranteed\n      // to occur either, only happens on failure to register on native\n      SyncTree.addRegistration({\n        ref: this,\n        once: true,\n        path: this.path,\n        key: this._getRefKey(),\n        appName: this._database.app.name,\n        dbURL: this._database.databaseUrl,\n        eventType: `${eventType}$cancelled`,\n        eventRegistrationKey: registrationCancellationKey,\n        listener: _context ? cancelCallbackOrContext.bind(_context) : cancelCallbackOrContext,\n      });\n    }\n\n    // initialise the native listener if not already listening\n    this._database.nativeModule.on({\n      eventType,\n      path: this.path,\n      key: this._getRefKey(),\n      appName: this._database.app.name,\n      modifiers: this._query.getModifiers(),\n      hasCancellationCallback: isFunction(cancelCallbackOrContext),\n      registration: {\n        eventRegistrationKey,\n        key: registrationObj.key,\n        registrationCancellationKey,\n      },\n    });\n\n    // increment number of listeners - just s short way of making\n    // every registration unique per .on() call\n    listeners += 1;\n\n    // return original unbound successCallback for\n    // the purposes of calling .off(eventType, callback) at a later date\n    return callback;\n  }\n\n  /**\n   * Detaches a callback previously attached with on().\n   *\n   * Detach a callback previously attached with on(). Note that if on() was called\n   * multiple times with the same eventType and callback, the callback will be called\n   * multiple times for each event, and off() must be called multiple times to\n   * remove the callback. Calling off() on a parent listener will not automatically\n   * remove listeners registered on child nodes, off() must also be called on any\n   * child listeners to remove the callback.\n   *\n   *  If a callback is not specified, all callbacks for the specified eventType will be removed.\n   * Similarly, if no eventType or callback is specified, all callbacks for the Reference will be removed.\n   * @param eventType\n   * @param originalCallback\n   */\n  off(eventType: string = '', originalCallback?: () => any) {\n    if (!arguments.length) {\n      // Firebase Docs:\n      //     if no eventType or callback is specified, all callbacks for the Reference will be removed.\n      return SyncTree.removeListenersForRegistrations(SyncTree.getRegistrationsByPath(this.path));\n    }\n\n    /*\n     * VALIDATE ARGS\n     */\n    if (eventType && (!isString(eventType) || !ReferenceEventTypes[eventType])) {\n      throw new Error(\n        `Query.off failed: First argument must be a valid string event type: \"${Object.keys(\n          ReferenceEventTypes\n        ).join(', ')}\"`\n      );\n    }\n\n    if (originalCallback && !isFunction(originalCallback)) {\n      throw new Error(\n        'Query.off failed: Function called with 2 arguments, but second optional argument was not a function.'\n      );\n    }\n\n    // Firebase Docs:\n    //     Note that if on() was called\n    //     multiple times with the same eventType and callback, the callback will be called\n    //     multiple times for each event, and off() must be called multiple times to\n    //     remove the callback.\n    // Remove only a single registration\n    if (eventType && originalCallback) {\n      const registration = SyncTree.getOneByPathEventListener(\n        this.path,\n        eventType,\n        originalCallback\n      );\n      if (!registration) return [];\n\n      // remove the paired cancellation registration if any exist\n      SyncTree.removeListenersForRegistrations([`${registration}$cancelled`]);\n\n      // remove only the first registration to match firebase web sdk\n      // call multiple times to remove multiple registrations\n      return SyncTree.removeListenerRegistrations(originalCallback, [registration]);\n    }\n\n    // Firebase Docs:\n    //     If a callback is not specified, all callbacks for the specified eventType will be removed.\n    const registrations = SyncTree.getRegistrationsByPathEvent(this.path, eventType);\n\n    SyncTree.removeListenersForRegistrations(\n      SyncTree.getRegistrationsByPathEvent(this.path, `${eventType}$cancelled`)\n    );\n\n    return SyncTree.removeListenersForRegistrations(registrations);\n  }\n}\n\n// eslint-disable-next-line no-unused-vars\ndeclare class ThenableReference<R> extends Reference {\n  then<U>(\n    onFulfill?: (value: R) => Promise<U> | U,\n    onReject?: (error: any) => Promise<U> | U\n  ): Promise<U>;\n  catch<U>(onReject?: (error: any) => Promise<U> | U): Promise<R | U>;\n}\n"]}