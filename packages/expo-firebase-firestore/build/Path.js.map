{"version":3,"file":"Path.js","sourceRoot":"","sources":["../src/Path.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,WAAW,CAAC;AAElC,MAAM,CAAC,OAAO,OAAO,IAAI;IAGvB,YAAY,cAAwB;QAClC,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC;IAC/B,CAAC;IAED,IAAI,EAAE;QACJ,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACzE,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,YAAoB;QACxB,SAAS,CAAC,YAAY,EAAE,kEAAkE,CAAC,CAAC;QAC5F,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAChG,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,QAAQ,CAAC,IAAa;QAC3B,IAAI,CAAC,IAAI;YAAE,OAAO,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;QAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9B,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;CACF","sourcesContent":["import invariant from 'invariant';\n\nexport default class Path {\n  _parts: string[];\n\n  constructor(pathComponents: string[]) {\n    this._parts = pathComponents;\n  }\n\n  get id(): string | null {\n    return this._parts.length ? this._parts[this._parts.length - 1] : null;\n  }\n\n  get isDocument(): boolean {\n    return this._parts.length % 2 === 0;\n  }\n\n  get isCollection(): boolean {\n    return this._parts.length % 2 === 1;\n  }\n\n  get relativeName(): string {\n    return this._parts.join('/');\n  }\n\n  child(relativePath: string): Path {\n    invariant(relativePath, 'Firestore.Path.child: expected relativePath to be a valid string');\n    return new Path(this._parts.concat(relativePath.split('/')));\n  }\n\n  parent(): Path | null {\n    return this._parts.length > 1 ? new Path(this._parts.slice(0, this._parts.length - 1)) : null;\n  }\n\n  /**\n   *\n   * @package\n   */\n  static fromName(name?: string): Path {\n    if (!name) return new Path([]);\n    const parts = name.split('/');\n    return new Path(parts);\n  }\n}\n"]}