{"version":3,"file":"CollectionReference.js","sourceRoot":"","sources":["../src/CollectionReference.ts"],"names":[],"mappings":"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","sourcesContent":["import { utils } from 'expo-firebase-app';\nimport invariant from 'invariant';\nimport DocumentReference from './DocumentReference';\nimport Query from './Query';\n\nimport {\n  Firestore,\n  GetOptions,\n  MetadataChanges,\n  QueryDirection,\n  QueryOperator,\n} from './firestoreTypes.types';\nimport FieldPath from './FieldPath';\nimport Path from './Path';\nimport { Observer, ObserverOnError, ObserverOnNext } from './Query';\nimport QuerySnapshot from './QuerySnapshot';\nconst { firestoreAutoId } = utils;\n\n/**\n * @class CollectionReference\n */\nexport default class CollectionReference {\n  _collectionPath: Path;\n\n  _firestore: Firestore;\n\n  _query: Query;\n\n  constructor(firestore: Firestore, collectionPath: Path) {\n    this._collectionPath = collectionPath;\n    this._firestore = firestore;\n    this._query = new Query(firestore, collectionPath);\n  }\n\n  get firestore(): Firestore {\n    return this._firestore;\n  }\n\n  get id(): string | null {\n    return this._collectionPath.id;\n  }\n\n  get parent(): DocumentReference | null {\n    const parentPath = this._collectionPath.parent();\n    return parentPath ? new DocumentReference(this._firestore, parentPath) : null;\n  }\n\n  add(data: Object): Promise<DocumentReference> {\n    const documentRef = this.doc();\n    return documentRef.set(data).then(() => Promise.resolve(documentRef));\n  }\n\n  doc(documentPath?: string): DocumentReference {\n    const newPath = documentPath || firestoreAutoId();\n\n    const path = this._collectionPath.child(newPath);\n    invariant(path.isDocument, 'Argument \"documentPath\" must point to a document.');\n    return new DocumentReference(this._firestore, path);\n  }\n\n  // From Query\n  endAt(...snapshotOrVarArgs: any[]): Query {\n    return this._query.endAt(snapshotOrVarArgs);\n  }\n\n  endBefore(...snapshotOrVarArgs: any[]): Query {\n    return this._query.endBefore(snapshotOrVarArgs);\n  }\n\n  get(options?: GetOptions): Promise<QuerySnapshot> {\n    return this._query.get(options);\n  }\n\n  limit(limit: number): Query {\n    return this._query.limit(limit);\n  }\n\n  onSnapshot(\n    optionsOrObserverOrOnNext: MetadataChanges | Observer | ObserverOnNext,\n    observerOrOnNextOrOnError?: Observer | ObserverOnNext | ObserverOnError,\n    onError?: ObserverOnError\n  ): () => void {\n    return this._query.onSnapshot(optionsOrObserverOrOnNext, observerOrOnNextOrOnError, onError);\n  }\n\n  orderBy(fieldPath: string | FieldPath, directionStr?: QueryDirection): Query {\n    return this._query.orderBy(fieldPath, directionStr);\n  }\n\n  startAfter(...snapshotOrVarArgs: any[]): Query {\n    return this._query.startAfter(snapshotOrVarArgs);\n  }\n\n  startAt(...snapshotOrVarArgs: any[]): Query {\n    return this._query.startAt(snapshotOrVarArgs);\n  }\n\n  where(fieldPath: string, opStr: QueryOperator, value: any): Query {\n    return this._query.where(fieldPath, opStr, value);\n  }\n}\n"]}