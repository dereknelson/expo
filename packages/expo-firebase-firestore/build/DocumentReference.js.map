{"version":3,"file":"DocumentReference.js","sourceRoot":"","sources":["../src/DocumentReference.ts"],"names":[],"mappings":"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","sourcesContent":["import { SharedEventEmitter, utils } from 'expo-firebase-app';\nimport invariant from 'invariant';\n\nimport CollectionReference from './CollectionReference';\nimport DocumentSnapshot from './DocumentSnapshot';\nimport { parseUpdateArgs } from './utils';\nimport { buildNativeMap } from './utils/serialize';\n\nimport {\n  Firestore,\n  GetOptions,\n  MetadataChanges,\n  NativeDocumentSnapshot,\n  SetOptions,\n} from './firestoreTypes.types';\nimport Path from './Path';\n\ntype ObserverOnError = (error: { [key: string]: any }) => void;\ntype ObserverOnNext = (snapshot: DocumentSnapshot) => void;\n\ntype Observer = {\n  error?: ObserverOnError;\n  next: ObserverOnNext;\n};\n\nconst { firestoreAutoId, isFunction, isObject } = utils;\n\n/**\n * @class DocumentReference\n */\nexport default class DocumentReference {\n  _documentPath: Path;\n  _firestore: Firestore;\n\n  constructor(firestore: Firestore, documentPath: Path) {\n    this._documentPath = documentPath;\n    this._firestore = firestore;\n  }\n\n  get firestore(): Firestore {\n    return this._firestore;\n  }\n\n  get id(): string | null {\n    return this._documentPath.id;\n  }\n\n  get parent(): CollectionReference {\n    const parentPath = this._documentPath.parent();\n    return new CollectionReference(this._firestore, parentPath as Path);\n  }\n\n  get path(): string {\n    return this._documentPath.relativeName;\n  }\n\n  collection(collectionPath: string): CollectionReference {\n    const path = this._documentPath.child(collectionPath);\n    invariant(path.isCollection, 'Argument \"collectionPath\" must point to a collection.');\n\n    return new CollectionReference(this._firestore, path);\n  }\n\n  delete(): Promise<void> {\n    return this._firestore.nativeModule.documentDelete(this.path);\n  }\n\n  get(options?: GetOptions): Promise<DocumentSnapshot> {\n    if (options) {\n      if (!isObject(options)) {\n        return Promise.reject(\n          new Error('DocumentReference.get failed: First argument must be an object.')\n        );\n      } else if (\n        options.source &&\n        (options.source !== 'default' && options.source !== 'server' && options.source !== 'cache')\n      ) {\n        return Promise.reject(\n          new Error(\n            'DocumentReference.get failed: GetOptions.source must be one of `default`, `server` or `cache`.'\n          )\n        );\n      }\n    }\n    return this._firestore.nativeModule\n      .documentGet(this.path, options)\n      .then(result => new DocumentSnapshot(this._firestore, result));\n  }\n\n  onSnapshot(\n    optionsOrObserverOrOnNext: MetadataChanges | Observer | ObserverOnNext,\n    observerOrOnNextOrOnError?: Observer | ObserverOnNext | ObserverOnError,\n    onError?: ObserverOnError\n  ) {\n    let observer: Observer;\n    let docListenOptions = {};\n    // Called with: onNext, ?onError\n    if (optionsOrObserverOrOnNext && typeof optionsOrObserverOrOnNext === 'function') {\n      if (observerOrOnNextOrOnError && typeof observerOrOnNextOrOnError !== 'function') {\n        throw new Error(\n          'DocumentReference.onSnapshot failed: Second argument must be a valid function.'\n        );\n      }\n      observer = {\n        next: optionsOrObserverOrOnNext,\n        error: observerOrOnNextOrOnError,\n      } as any;\n    } else if (optionsOrObserverOrOnNext && isObject(optionsOrObserverOrOnNext)) {\n      // Called with: Observer\n      optionsOrObserverOrOnNext = optionsOrObserverOrOnNext as Observer;\n      if (optionsOrObserverOrOnNext.next) {\n        if (typeof optionsOrObserverOrOnNext.next === 'function') {\n          if (optionsOrObserverOrOnNext.error && !isFunction(optionsOrObserverOrOnNext.error)) {\n            throw new Error(\n              'DocumentReference.onSnapshot failed: Observer.error must be a valid function.'\n            );\n          }\n          observer = {\n            next: optionsOrObserverOrOnNext.next,\n            error: optionsOrObserverOrOnNext.error,\n          };\n        } else {\n          throw new Error(\n            'DocumentReference.onSnapshot failed: Observer.next must be a valid function.'\n          );\n        }\n      } else if (\n        Object.prototype.hasOwnProperty.call(optionsOrObserverOrOnNext, 'includeMetadataChanges')\n      ) {\n        docListenOptions = optionsOrObserverOrOnNext;\n        // Called with: Options, onNext, ?onError\n        if (isFunction(observerOrOnNextOrOnError)) {\n          if (onError && !isFunction(onError)) {\n            throw new Error(\n              'DocumentReference.onSnapshot failed: Third argument must be a valid function.'\n            );\n          }\n          observer = {\n            next: observerOrOnNextOrOnError,\n            error: onError,\n          } as any;\n          // Called with Options, Observer\n        } else if (\n          observerOrOnNextOrOnError &&\n          isObject(observerOrOnNextOrOnError) &&\n          observerOrOnNextOrOnError['next']\n        ) {\n          if (typeof observerOrOnNextOrOnError['next'] === 'function') {\n            if (\n              observerOrOnNextOrOnError['error'] &&\n              typeof observerOrOnNextOrOnError['error'] === 'function'\n            ) {\n              throw new Error(\n                'DocumentReference.onSnapshot failed: Observer.error must be a valid function.'\n              );\n            }\n            observer = {\n              next: observerOrOnNextOrOnError['next'],\n              error: observerOrOnNextOrOnError['error'],\n            };\n          } else {\n            throw new Error(\n              'DocumentReference.onSnapshot failed: Observer.next must be a valid function.'\n            );\n          }\n        } else {\n          throw new Error(\n            'DocumentReference.onSnapshot failed: Second argument must be a function or observer.'\n          );\n        }\n      } else {\n        throw new Error(\n          'DocumentReference.onSnapshot failed: First argument must be a function, observer or options.'\n        );\n      }\n    } else {\n      throw new Error('DocumentReference.onSnapshot failed: Called with invalid arguments.');\n    }\n    const listenerId = firestoreAutoId();\n\n    const listener = (nativeDocumentSnapshot: NativeDocumentSnapshot) => {\n      const documentSnapshot = new DocumentSnapshot(this.firestore, nativeDocumentSnapshot);\n      observer.next(documentSnapshot);\n    };\n\n    // Listen to snapshot events\n    SharedEventEmitter.addListener(\n      this._firestore.getAppEventName(`onDocumentSnapshot:${listenerId}`),\n      listener\n    );\n\n    // Listen for snapshot error events\n    if (observer.error) {\n      SharedEventEmitter.addListener(\n        this._firestore.getAppEventName(`onDocumentSnapshotError:${listenerId}`),\n        observer.error\n      );\n    }\n\n    // Add the native listener\n    this._firestore.nativeModule.documentOnSnapshot(this.path, listenerId, docListenOptions);\n\n    // Return an unsubscribe method\n    return this._offDocumentSnapshot.bind(this, listenerId, listener);\n  }\n\n  set(data: Object, options?: SetOptions): Promise<void> {\n    const nativeData = buildNativeMap(data);\n    return this._firestore.nativeModule.documentSet(this.path, nativeData, options);\n  }\n\n  update(...args: any[]): Promise<void> {\n    const data = parseUpdateArgs(args, 'DocumentReference.update');\n    const nativeData = buildNativeMap(data);\n    return this._firestore.nativeModule.documentUpdate(this.path, nativeData);\n  }\n\n  /**\n   * INTERNALS\n   */\n\n  /**\n   * Remove document snapshot listener\n   * @param listener\n   */\n  _offDocumentSnapshot(listenerId: string, listener: Function) {\n    this._firestore.logger.info('Removing onDocumentSnapshot listener');\n    SharedEventEmitter.removeListener(\n      this._firestore.getAppEventName(`onDocumentSnapshot:${listenerId}`),\n      listener\n    );\n    SharedEventEmitter.removeListener(\n      this._firestore.getAppEventName(`onDocumentSnapshotError:${listenerId}`),\n      listener\n    );\n    this._firestore.nativeModule.documentOffSnapshot(this.path, listenerId);\n  }\n}\n"]}