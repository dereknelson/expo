{"version":3,"file":"types.flow.js","sourceRoot":"","sources":["../src/types.flow.ts"],"names":[],"mappings":"","sourcesContent":["export type HttpsCallableResult = {\n  data: { [key: string]: any };\n};\n\nexport type FunctionsErrorCode =\n  | 'ok'\n  | 'cancelled'\n  | 'unknown'\n  | 'invalid-argument'\n  | 'deadline-exceeded'\n  | 'not-found'\n  | 'already-exists'\n  | 'permission-denied'\n  | 'resource-exhausted'\n  | 'failed-precondition'\n  | 'aborted'\n  | 'out-of-range'\n  | 'unimplemented'\n  | 'internal'\n  | 'unavailable'\n  | 'data-loss'\n  | 'unauthenticated';\n\nexport interface HttpsErrorInterface extends Error {\n  details?: any;\n  code: FunctionsErrorCode;\n}\n\nexport type HttpsCallablePromise = Promise<HttpsCallableResult> | Promise<HttpsErrorInterface>;\n\nexport type HttpsCallable = (data?: any) => HttpsCallablePromise;\n\nexport type HttpsErrorCode = { [name: string]: FunctionsErrorCode };\n"]}