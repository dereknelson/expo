{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { App, INTERNALS, ModuleBase, SharedEventEmitter, utils } from 'expo-firebase-app';\nimport invariant from 'invariant';\n\nimport IOSMessaging from './IOSMessaging';\nimport RemoteMessage from './RemoteMessage';\n\nimport { NativeInboundRemoteMessage } from './types';\n\nconst { isFunction, isObject } = utils;\n\nexport type OnMessage = (message: RemoteMessage) => any;\n\nexport type OnMessageObserver = {\n  next: OnMessage;\n};\n\nexport type OnTokenRefresh = (token: string) => any;\n\nexport type OnTokenRefreshObserver = {\n  next: OnTokenRefresh;\n};\n\nconst NATIVE_EVENTS = {\n  messageReceived: 'Expo.Firebase.messaging_message_received',\n  tokenRefreshed: 'Expo.Firebase.messaging_token_refreshed',\n};\n\nexport const MODULE_NAME = 'ExpoFirebaseMessaging';\nexport const NAMESPACE = 'messaging';\n\nexport const statics = {\n  RemoteMessage,\n};\n\n/**\n * @class Messaging\n */\nexport default class Messaging extends ModuleBase {\n  static moduleName = MODULE_NAME;\n  static namespace = NAMESPACE;\n  static statics = statics;\n  _ios: IOSMessaging;\n\n  constructor(app: App) {\n    super(app, {\n      events: Object.values(NATIVE_EVENTS),\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE,\n    });\n    this._ios = new IOSMessaging(this);\n\n    SharedEventEmitter.addListener(\n      // sub to internal native event - this fans out to\n      // public event name: onMessage\n      NATIVE_EVENTS.messageReceived,\n      (message: NativeInboundRemoteMessage) => {\n        SharedEventEmitter.emit('onMessage', new RemoteMessage(message));\n      }\n    );\n\n    SharedEventEmitter.addListener(\n      // sub to internal native event - this fans out to\n      // public event name: onMessage\n      NATIVE_EVENTS.tokenRefreshed,\n      ({ token }) => {\n        SharedEventEmitter.emit('onTokenRefresh', token);\n      }\n    );\n\n    // Tell the native module that we're ready to receive events\n    if (this.nativeModule.jsInitialised) {\n      this.nativeModule.jsInitialised();\n    }\n  }\n\n  get ios(): IOSMessaging {\n    return this._ios;\n  }\n\n  onMessage(nextOrObserver: OnMessage | OnMessageObserver): () => any {\n    let listener: (message: RemoteMessage) => any;\n    if (nextOrObserver && typeof nextOrObserver === 'function') {\n      // $FlowExpectedError: Not coping with the overloaded method signature\n      listener = nextOrObserver;\n    } else if (isObject(nextOrObserver) && isFunction(nextOrObserver.next)) {\n      listener = nextOrObserver.next;\n    } else {\n      throw new Error(\n        'Messaging.onMessage failed: First argument must be a function or observer object with a `next` function.'\n      );\n    }\n\n    this.logger.info('Creating onMessage listener');\n\n    SharedEventEmitter.addListener('onMessage', listener);\n\n    return () => {\n      this.logger.info('Removing onMessage listener');\n      SharedEventEmitter.removeListener('onMessage', listener);\n    };\n  }\n\n  onTokenRefresh(nextOrObserver: OnTokenRefresh | OnTokenRefreshObserver): () => any {\n    let listener: (value: string) => any;\n    if (nextOrObserver && typeof nextOrObserver === 'function') {\n      // $FlowExpectedError: Not coping with the overloaded method signature\n      listener = nextOrObserver;\n    } else if (isObject(nextOrObserver) && isFunction(nextOrObserver.next)) {\n      listener = nextOrObserver.next;\n    } else {\n      throw new Error(\n        'Messaging.onTokenRefresh failed: First argument must be a function or observer object with a `next` function.'\n      );\n    }\n\n    this.logger.info('Creating onTokenRefresh listener');\n    SharedEventEmitter.addListener('onTokenRefresh', listener);\n\n    return () => {\n      this.logger.info('Removing onTokenRefresh listener');\n      SharedEventEmitter.removeListener('onTokenRefresh', listener);\n    };\n  }\n\n  /**\n   * NON WEB-SDK METHODS\n   */\n\n  async sendMessage(remoteMessage: RemoteMessage): Promise<void> {\n    invariant(\n      remoteMessage instanceof RemoteMessage,\n      `Messaging:sendMessage expects a 'RemoteMessage' but got type ${typeof remoteMessage}`\n    );\n    return await this.nativeModule.sendMessage(remoteMessage.build());\n  }\n\n  async subscribeToTopic(topic: string): Promise<void> {\n    return await this.nativeModule.subscribeToTopic(topic);\n  }\n\n  async unsubscribeFromTopic(topic: string): Promise<void> {\n    return await this.nativeModule.unsubscribeFromTopic(topic);\n  }\n\n  /**\n   * KNOWN UNSUPPORTED METHODS\n   */\n\n  async getToken(): Promise<string> {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'getToken'));\n  }\n\n  async requestPermission(): Promise<void> {\n    throw new Error(\n      INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'requestPermission')\n    );\n  }\n\n  async hasPermission(): Promise<boolean> {\n    throw new Error(\n      INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'hasPermission')\n    );\n  }\n\n  deleteToken() {\n    throw new Error(INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'deleteToken'));\n  }\n\n  setBackgroundMessageHandler() {\n    throw new Error(\n      INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'setBackgroundMessageHandler')\n    );\n  }\n\n  useServiceWorker() {\n    throw new Error(\n      INTERNALS.STRINGS.ERROR_UNSUPPORTED_MODULE_METHOD('messaging', 'useServiceWorker')\n    );\n  }\n}\n\nexport { NativeInboundRemoteMessage, NativeOutboundRemoteMessage, Notification } from './types';\nexport { RemoteMessage };\n"]}