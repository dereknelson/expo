{"version":3,"file":"getModuleInstance.js","sourceRoot":"","sources":["../../src/utils/getModuleInstance.ts"],"names":[],"mappings":"AAAA,OAAO,SAAS,MAAM,aAAa,CAAC;AAEpC,MAAM,gBAAgB,GAAG;IACvB,IAAI,SAAS;QACX,OAAO,OAAO,CAAC,yBAAyB,CAAC,CAAC,OAAO,CAAC;IACpD,CAAC;IACD,IAAI,IAAI;QACN,OAAO,OAAO,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC;IAC/C,CAAC;IACD,IAAI,MAAM;QACR,OAAO,OAAO,CAAC,6BAA6B,CAAC,CAAC,OAAO,CAAC;IACxD,CAAC;IACD,IAAI,WAAW;QACb,OAAO,OAAO,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAC;IACtD,CAAC;IACD,IAAI,QAAQ;QACV,OAAO,OAAO,CAAC,wBAAwB,CAAC,CAAC,OAAO,CAAC;IACnD,CAAC;IACD,IAAI,SAAS;QACX,OAAO,OAAO,CAAC,yBAAyB,CAAC,CAAC,OAAO,CAAC;IACpD,CAAC;IACD,IAAI,SAAS;QACX,OAAO,OAAO,CAAC,yBAAyB,CAAC,CAAC,OAAO,CAAC;IACpD,CAAC;IACD,IAAI,GAAG;QACL,OAAO,OAAO,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAC;IACtD,CAAC;IACD,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,uBAAuB,CAAC,CAAC,OAAO,CAAC;IAClD,CAAC;IACD,IAAI,KAAK;QACP,OAAO,OAAO,CAAC,qBAAqB,CAAC,CAAC,OAAO,CAAC;IAChD,CAAC;IACD,IAAI,SAAS;QACX,OAAO,OAAO,CAAC,yBAAyB,CAAC,CAAC,OAAO,CAAC;IACpD,CAAC;IACD,IAAI,aAAa;QACf,OAAO,OAAO,CAAC,6BAA6B,CAAC,CAAC,OAAO,CAAC;IACxD,CAAC;IACD,IAAI,IAAI;QACN,OAAO,OAAO,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAC;IACtD,CAAC;IACD,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,uBAAuB,CAAC,CAAC,OAAO,CAAC;IAClD,CAAC;IACD,IAAI,KAAK;QACP,OAAO,OAAO,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC;IAC1C,CAAC;CACF,CAAC;AAEF,MAAM,CAAC,OAAO,UAAU,iBAAiB,CAAC,IAAY;IACpD,IAAI;QACF,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC;KAC/B;IAAC,OAAO,KAAK,EAAE;QACd,qEAAqE;QACrE,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;KAC/D;AACH,CAAC","sourcesContent":["import INTERNALS from './internals';\n\nconst FirebasePackages = {\n  get analytics() {\n    return require('expo-firebase-analytics').default;\n  },\n  get auth() {\n    return require('expo-firebase-auth').default;\n  },\n  get config() {\n    return require('expo-firebase-remote-config').default;\n  },\n  get crashlytics() {\n    return require('expo-firebase-crashlytics').default;\n  },\n  get database() {\n    return require('expo-firebase-database').default;\n  },\n  get firestore() {\n    return require('expo-firebase-firestore').default;\n  },\n  get functions() {\n    return require('expo-firebase-functions').default;\n  },\n  get iid() {\n    return require('expo-firebase-instance-id').default;\n  },\n  get invites() {\n    return require('expo-firebase-invites').default;\n  },\n  get links() {\n    return require('expo-firebase-links').default;\n  },\n  get messaging() {\n    return require('expo-firebase-messaging').default;\n  },\n  get notifications() {\n    return require('expo-firebase-notifications').default;\n  },\n  get perf() {\n    return require('expo-firebase-performance').default;\n  },\n  get storage() {\n    return require('expo-firebase-storage').default;\n  },\n  get utils() {\n    return require('./UtilsModule').default;\n  },\n};\n\nexport default function getModuleInstance(name: string) {\n  try {\n    return FirebasePackages[name];\n  } catch (error) {\n    // TODO: Bacon: these aren't correct iid => expo-firebase-instance-id\n    throw new Error(INTERNALS.STRINGS.ERROR_MISSING_IMPORT(name));\n  }\n}\n"]}