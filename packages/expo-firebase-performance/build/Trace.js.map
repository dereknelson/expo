{"version":3,"file":"Trace.js","sourceRoot":"","sources":["../src/Trace.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,OAAO,OAAO,KAAK;IAIxB,YAAY,YAAiB,EAAE,UAAkB;QAC/C,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,SAAiB;QAClC,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;IAChF,CAAC;IAED,KAAK,CAAC,aAAa;QACjB,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACtE,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,UAAkB;QAChC,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;IAClF,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,UAAkB,EAAE,WAAmB;QAC3D,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;IACjG,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,SAAiB,EAAE,KAAa;QACjD,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IACvF,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,UAAkB,EAAE,KAAa;QAC/C,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IACrF,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,SAAiB;QACrC,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;IACnF,CAAC;IAED,KAAK,CAAC,KAAK;QACT,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9D,CAAC;IAED,KAAK,CAAC,IAAI;QACR,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7D,CAAC;CACF","sourcesContent":["export default class Trace {\n  identifier: string;\n  _nativeModule: any;\n\n  constructor(nativeModule: any, identifier: string) {\n    this._nativeModule = nativeModule;\n    this.identifier = identifier;\n  }\n\n  async getAttribute(attribute: string): Promise<string | null> {\n    return await this._nativeModule.getTraceAttribute(this.identifier, attribute);\n  }\n\n  async getAttributes(): Promise<Object> {\n    return await this._nativeModule.getTraceAttributes(this.identifier);\n  }\n\n  async getMetric(metricName: string): Promise<number> {\n    return await this._nativeModule.getTraceLongMetric(this.identifier, metricName);\n  }\n\n  async incrementMetric(metricName: string, incrementBy: number): Promise<null> {\n    return await this._nativeModule.incrementTraceMetric(this.identifier, metricName, incrementBy);\n  }\n\n  async putAttribute(attribute: string, value: string): Promise<boolean> {\n    return await this._nativeModule.putTraceAttribute(this.identifier, attribute, value);\n  }\n\n  async putMetric(metricName: string, value: number): Promise<null> {\n    return await this._nativeModule.putTraceMetric(this.identifier, metricName, value);\n  }\n\n  async removeAttribute(attribute: string): Promise<null> {\n    return await this._nativeModule.removeTraceAttribute(this.identifier, attribute);\n  }\n\n  async start(): Promise<null> {\n    return await this._nativeModule.startTrace(this.identifier);\n  }\n\n  async stop(): Promise<null> {\n    return await this._nativeModule.stopTrace(this.identifier);\n  }\n}\n"]}