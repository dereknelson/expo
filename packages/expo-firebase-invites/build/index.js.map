{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAO,kBAAkB,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAC;AACxE,OAAO,UAAU,MAAM,cAAc,CAAC;AAEtC,MAAM,CAAC,MAAM,WAAW,GAAG,qBAAqB,CAAC;AACjD,MAAM,CAAC,MAAM,SAAS,GAAG,SAAS,CAAC;AACnC,MAAM,aAAa,GAAG;IACpB,yBAAyB,EAAE,2CAA2C;CACvE,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG;IACrB,UAAU;CACX,CAAC;AAOF,MAAM,CAAC,OAAO,OAAO,OAAQ,SAAQ,UAAU;IAK7C,YAAY,GAAQ;QAClB,KAAK,CAAC,GAAG,EAAE;YACT,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;YACpC,mBAAmB,EAAE,KAAK;YAC1B,UAAU,EAAE,WAAW;YACvB,kBAAkB,EAAE,KAAK;YACzB,SAAS,EAAE,SAAS;SACrB,CAAC,CAAC;QAEH,kBAAkB,CAAC,WAAW;QAC5B,kDAAkD;QAClD,+BAA+B;QAC/B,aAAa,CAAC,yBAAyB,EACvC,CAAC,UAA0B,EAAE,EAAE;YAC7B,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;QACtD,CAAC,CACF,CAAC;QAEF,4DAA4D;QAC5D,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE;YACnC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;SACnC;IACH,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,oBAAoB;QACxB,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC;IACxD,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAC,QAAiC;QAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;QAEnD,kBAAkB,CAAC,WAAW,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QAEzD,OAAO,GAAG,EAAE;YACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;YACnD,kBAAkB,CAAC,cAAc,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QAC9D,CAAC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,UAAsB;QACzC,IAAI,CAAC,CAAC,UAAU,YAAY,UAAU,CAAC,EAAE;YACvC,MAAM,IAAI,KAAK,CACb,+DAA+D,OAAO,UAAU,EAAE,CACnF,CAAC;SACH;QACD,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;IACpE,CAAC;;AA3DM,kBAAU,GAAG,WAAW,CAAC;AACzB,iBAAS,GAAG,SAAS,CAAC;AACtB,eAAO,GAAG,OAAO,CAAC;AA4D3B,OAAO,EAAE,OAAO,IAAI,UAAU,EAAE,MAAM,cAAc,CAAC","sourcesContent":["import { App, SharedEventEmitter, ModuleBase } from 'expo-firebase-app';\nimport Invitation from './Invitation';\n\nexport const MODULE_NAME = 'ExpoFirebaseInvites';\nexport const NAMESPACE = 'invites';\nconst NATIVE_EVENTS = {\n  invitesInvitationReceived: 'Expo.Firebase.invites_invitation_received',\n};\n\nexport const statics = {\n  Invitation,\n};\n\ntype InvitationOpen = {\n  deepLink: string;\n  invitationId: string;\n};\n\nexport default class Invites extends ModuleBase {\n  static moduleName = MODULE_NAME;\n  static namespace = NAMESPACE;\n  static statics = statics;\n\n  constructor(app: App) {\n    super(app, {\n      events: Object.values(NATIVE_EVENTS),\n      hasCustomUrlSupport: false,\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: false,\n      namespace: NAMESPACE,\n    });\n\n    SharedEventEmitter.addListener(\n      // sub to internal native event - this fans out to\n      // public event name: onMessage\n      NATIVE_EVENTS.invitesInvitationReceived,\n      (invitation: InvitationOpen) => {\n        SharedEventEmitter.emit('onInvitation', invitation);\n      }\n    );\n\n    // Tell the native module that we're ready to receive events\n    if (this.nativeModule.jsInitialised) {\n      this.nativeModule.jsInitialised();\n    }\n  }\n\n  /**\n   * Returns the invitation that triggered application open\n   * @returns {Promise.<InvitationOpen>}\n   */\n  async getInitialInvitation(): Promise<InvitationOpen | undefined> {\n    return await this.nativeModule.getInitialInvitation();\n  }\n\n  /**\n   * Subscribe to invites\n   * @param listener\n   * @returns {Function}\n   */\n  onInvitation(listener: (InvitationOpen) => any) {\n    this.logger.info('Creating onInvitation listener');\n\n    SharedEventEmitter.addListener('onInvitation', listener);\n\n    return () => {\n      this.logger.info('Removing onInvitation listener');\n      SharedEventEmitter.removeListener('onInvitation', listener);\n    };\n  }\n\n  async sendInvitation(invitation: Invitation): Promise<string[]> {\n    if (!(invitation instanceof Invitation)) {\n      throw new Error(\n        `Invites:sendInvitation expects an 'Invitation' but got type ${typeof invitation}`\n      );\n    }\n    return await this.nativeModule.sendInvitation(invitation.build());\n  }\n}\n\nexport { default as Invitation } from './Invitation';\n"]}