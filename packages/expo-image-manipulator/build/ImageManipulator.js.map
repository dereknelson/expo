{"version":3,"file":"ImageManipulator.js","sourceRoot":"","sources":["../src/ImageManipulator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,aAAa,CAAC;AAElD,OAAO,oBAAoB,MAAM,wBAAwB,CAAC;AAE1D,OAAO,EAEL,QAAQ,EAER,UAAU,GAEX,MAAM,0BAA0B,CAAC;AAElC,MAAM,CAAC,KAAK,UAAU,eAAe,CACnC,GAAW,EACX,UAAoB,EAAE,EACtB,EAAE,MAAM,GAAG,UAAU,CAAC,IAAI,EAAE,GAAG,IAAI,KAAkB,EAAE;IAEvD,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE;QACzC,MAAM,IAAI,mBAAmB,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;KACtE;IACD,IAAI,CAAC,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,EAAE;QAC9B,MAAM,IAAI,SAAS,CAAC,qCAAqC,CAAC,CAAC;KAC5D;IACD,OAAO,MAAM,oBAAoB,CAAC,eAAe,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC;AACvF,CAAC;AAED,OAAO,EACL,QAAQ,EACR,UAAU,GACX,CAAC","sourcesContent":["import { UnavailabilityError } from 'expo-errors';\n\nimport ExpoImageManipulator from './ExpoImageManipulator';\n\nimport {\n  Action,\n  FlipType,\n  ImageResult,\n  SaveFormat,\n  SaveOptions,\n} from './ImageManipulator.types';\n\nexport async function manipulateAsync(\n  uri: string,\n  actions: Action[] = [],\n  { format = SaveFormat.JPEG, ...rest }: SaveOptions = {},\n): Promise<ImageResult> {\n  if (!ExpoImageManipulator.manipulateAsync) {\n    throw new UnavailabilityError('ImageManipulator', 'manipulateAsync');\n  }\n  if (!(typeof uri === 'string')) {\n    throw new TypeError('The \"uri\" argument must be a string');\n  }\n  return await ExpoImageManipulator.manipulateAsync(uri, actions, { format, ...rest });\n}\n\nexport {\n  FlipType,\n  SaveFormat,\n};\n"]}