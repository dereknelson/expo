{"version":3,"file":"task.js","sourceRoot":"","sources":["../src/task.ts"],"names":[],"mappings":"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","sourcesContent":["import { utils } from 'expo-firebase-app';\nimport invariant from 'invariant';\nimport StorageStatics from './statics';\n\nimport {\n  Storage,\n  StorageReference,\n  NextOrObserverType,\n  FuncErrorType,\n  FuncSnapshotType,\n} from './index.types';\n\nexport const UPLOAD_TASK = 'upload';\nexport const DOWNLOAD_TASK = 'download';\n\nconst { isFunction } = utils;\n\n/**\n * @url https://firebase.google.com/docs/reference/js/firebase.storage.UploadTask\n */\nexport default class StorageTask {\n  type: typeof UPLOAD_TASK | typeof DOWNLOAD_TASK;\n  ref: StorageReference;\n  storage: Storage;\n  path: string;\n  then: () => Promise<any>;\n  catch: () => Promise<any>;\n\n  constructor(\n    type: typeof UPLOAD_TASK | typeof DOWNLOAD_TASK,\n    promise: Promise<any>,\n    storageRef: StorageReference\n  ) {\n    this.type = type;\n    this.ref = storageRef;\n    this.storage = storageRef._storage;\n    this.path = storageRef.path;\n\n    // 'proxy' original promise\n    this.then = promise.then.bind(promise);\n    this.catch = promise.catch.bind(promise);\n  }\n\n  /**\n   * Intercepts a native snapshot result object attaches ref / task instances\n   * and calls the original function\n   * @returns {Promise.<T>}\n   * @private\n   */\n  _interceptSnapshotEvent(f?: Function | null): null | ((snapshot: any) => any) {\n    if (!isFunction(f)) {\n      return null;\n    }\n    return snapshot => {\n      const _snapshot = Object.assign({}, snapshot);\n      _snapshot.task = this;\n      _snapshot.ref = this.ref;\n      return f && f(_snapshot);\n    };\n  }\n\n  /**\n   * Intercepts a error object form native and converts to a JS Error\n   * @param f\n   * @returns {*}\n   * @private\n   */\n  _interceptErrorEvent(f?: Function | null): null | ((error: Error) => any) {\n    if (!isFunction(f)) {\n      return null;\n    }\n    return (error: any) => {\n      const _error: any = new Error(error.message);\n      // $FlowExpectedError\n      _error.code = error.code;\n      return f && f(_error);\n    };\n  }\n\n  /**\n   *\n   * @param nextOrObserver\n   * @param error\n   * @param complete\n   * @returns {function()}\n   * @private\n   */\n  _subscribe(\n    nextOrObserver: NextOrObserverType,\n    error: FuncErrorType,\n    complete: FuncSnapshotType\n  ): Function {\n    let _error;\n    let _next;\n    let _complete;\n\n    if (typeof nextOrObserver === 'function') {\n      _error = this._interceptErrorEvent(error);\n      _next = this._interceptSnapshotEvent(nextOrObserver);\n      _complete = this._interceptSnapshotEvent(complete);\n    } else if (nextOrObserver) {\n      _error = this._interceptErrorEvent(nextOrObserver.error);\n      _next = this._interceptSnapshotEvent(nextOrObserver.next);\n      _complete = this._interceptSnapshotEvent(nextOrObserver.complete);\n    }\n\n    if (_next) {\n      this.storage._addListener(\n        this.path,\n        `Expo.Firebase.${StorageStatics.TaskEvent.STATE_CHANGED}`,\n        _next\n      );\n    }\n    if (_error) {\n      this.storage._addListener(this.path, `Expo.Firebase.${this.type}_failure`, _error);\n    }\n    if (_complete) {\n      this.storage._addListener(this.path, `Expo.Firebase.${this.type}_success`, _complete);\n    }\n\n    return () => {\n      if (_next)\n        this.storage._removeListener(\n          this.path,\n          `Expo.Firebase.${StorageStatics.TaskEvent.STATE_CHANGED}`,\n          _next\n        );\n      if (_error)\n        this.storage._removeListener(this.path, `Expo.Firebase.${this.type}_failure`, _error);\n      if (_complete)\n        this.storage._removeListener(this.path, `Expo.Firebase.${this.type}_success`, _complete);\n    };\n  }\n\n  /**\n   *\n   * @param event\n   * @param nextOrObserver\n   * @param error\n   * @param complete\n   * @returns {function()}\n   */\n  on(\n    event: string = StorageStatics.TaskEvent.STATE_CHANGED,\n    nextOrObserver: NextOrObserverType,\n    error: FuncErrorType,\n    complete: FuncSnapshotType\n  ): Function {\n    invariant(event, \"StorageTask.on listener is missing required string argument 'event'.\");\n    invariant(\n      event === StorageStatics.TaskEvent.STATE_CHANGED,\n      `StorageTask.on event argument must be a string with a value of '${\n        StorageStatics.TaskEvent.STATE_CHANGED\n      }'`\n    );\n\n    // if only event provided return the subscriber function\n    if (!nextOrObserver && !error && !complete) {\n      return this._subscribe.bind(this);\n    }\n\n    return this._subscribe(nextOrObserver, error, complete);\n  }\n\n  pause() {\n    throw new Error('.pause() is not currently supported by expo-firebase-storage');\n  }\n\n  resume() {\n    // todo\n    throw new Error('.resume() is not currently supported by expo-firebase-storage');\n  }\n\n  cancel() {\n    // todo\n    throw new Error('.cancel() is not currently supported by expo-firebase-storage');\n  }\n}\n"]}