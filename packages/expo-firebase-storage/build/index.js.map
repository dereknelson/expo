{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAO,UAAU,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAC;AAExE,OAAO,UAAU,MAAM,aAAa,CAAC;AACrC,OAAO,OAAO,MAAM,WAAW,CAAC;AAEhC,MAAM,aAAa,GAAG;IACpB,YAAY,EAAE,6BAA6B;IAC3C,YAAY,EAAE,6BAA6B;CAC5C,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,qBAAqB,CAAC;AACjD,MAAM,CAAC,MAAM,SAAS,GAAG,SAAS,CAAC;AAEnC,MAAM,CAAC,OAAO,OAAO,OAAQ,SAAQ,UAAU;IAK7C;;;;OAIG;IACH,YAAY,GAAQ;QAClB,KAAK,CAAC,GAAG,EAAE;YACT,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;YACpC,UAAU,EAAE,WAAW;YACvB,kBAAkB,EAAE,IAAI;YACxB,mBAAmB,EAAE,KAAK;YAC1B,SAAS,EAAE,SAAS;SACrB,CAAC,CAAC;QAEH,kBAAkB,CAAC,WAAW,CAC5B,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,YAAY,CAAC,EAChD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CACpC,CAAC;QAEF,kBAAkB,CAAC,WAAW,CAC5B,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,YAAY,CAAC,EAChD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CACpC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,GAAG,CAAC,IAAY;QACd,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IAED;;;;;OAKG;IACH,UAAU,CAAC,GAAW;QACpB,oCAAoC;QACpC,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,QAAQ,GAAG,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED;;;;OAIG;IACH,wBAAwB,CAAC,IAAY;QACnC,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;IACnD,CAAC;IAED;;;;OAIG;IACH,qBAAqB,CAAC,IAAY;QAChC,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAED;;;;OAIG;IACH,uBAAuB,CAAC,IAAY;QAClC,IAAI,CAAC,YAAY,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAED;;OAEG;IACH,gBAAgB,CAAC,IAAY,EAAE,SAAiB;QAC9C,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,IAAI,SAAS,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,mBAAmB,CAAC,KAAU;QAC5B,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;QAClC,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC;QAE9B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAClE,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;IACxE,CAAC;IAED,mBAAmB,CAAC,GAAQ;QAC1B,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC;QAChC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC;QAE5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;QACjD,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;IACxE,CAAC;IAED,YAAY,CAAC,IAAY,EAAE,SAAiB,EAAE,EAAqB;QACjE,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,eAAe,CAAC,IAAY,EAAE,SAAiB,EAAE,MAAyB;QACxE,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,MAAM,CAAC,CAAC;IACpF,CAAC;;AA1GM,kBAAU,GAAG,WAAW,CAAC;AACzB,iBAAS,GAAG,SAAS,CAAC;AACtB,eAAO,GAAG,OAAO,CAAC;AA2G3B,OAAO,EAAE,OAAO,IAAI,gBAAgB,EAAE,MAAM,aAAa,CAAC;AAC1D,OAAO,EAAE,UAAU,EAAE,CAAC","sourcesContent":["import { App, ModuleBase, SharedEventEmitter } from 'expo-firebase-app';\n\nimport StorageRef from './reference';\nimport statics from './statics';\n\nconst NATIVE_EVENTS = {\n  storageEvent: 'Expo.Firebase.storage_event',\n  storageError: 'Expo.Firebase.storage_error',\n};\n\nexport const MODULE_NAME = 'ExpoFirebaseStorage';\nexport const NAMESPACE = 'storage';\n\nexport default class Storage extends ModuleBase {\n  static moduleName = MODULE_NAME;\n  static namespace = NAMESPACE;\n  static statics = statics;\n\n  /**\n   *\n   * @param app\n   * @param options\n   */\n  constructor(app: App) {\n    super(app, {\n      events: Object.values(NATIVE_EVENTS),\n      moduleName: MODULE_NAME,\n      hasMultiAppSupport: true,\n      hasCustomUrlSupport: false,\n      namespace: NAMESPACE,\n    });\n\n    SharedEventEmitter.addListener(\n      this.getAppEventName(NATIVE_EVENTS.storageEvent),\n      this._handleStorageEvent.bind(this)\n    );\n\n    SharedEventEmitter.addListener(\n      this.getAppEventName(NATIVE_EVENTS.storageError),\n      this._handleStorageEvent.bind(this)\n    );\n  }\n\n  /**\n   * Returns a reference for the given path in the default bucket.\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#ref\n   * @param path\n   * @returns {StorageReference}\n   */\n  ref(path: string): StorageRef {\n    return new StorageRef(this, path);\n  }\n\n  /**\n   * Returns a reference for the given absolute URL.\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#refFromURL\n   * @param url\n   * @returns {StorageReference}\n   */\n  refFromURL(url: string): StorageRef {\n    // TODO don't think this is correct?\n    return new StorageRef(this, `url::${url}`);\n  }\n\n  /**\n   * setMaxOperationRetryTime\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#setMaxOperationRetryTime\n   * @param time The new maximum operation retry time in milliseconds.\n   */\n  setMaxOperationRetryTime(time: number): void {\n    this.nativeModule.setMaxOperationRetryTime(time);\n  }\n\n  /**\n   * setMaxUploadRetryTime\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Storage#setMaxUploadRetryTime\n   * @param time The new maximum upload retry time in milliseconds.\n   */\n  setMaxUploadRetryTime(time: number): void {\n    this.nativeModule.setMaxUploadRetryTime(time);\n  }\n\n  /**\n   * setMaxDownloadRetryTime\n   * @url N/A\n   * @param time The new maximum download retry time in milliseconds.\n   */\n  setMaxDownloadRetryTime(time: number): void {\n    this.nativeModule.setMaxDownloadRetryTime(time);\n  }\n\n  /**\n   * INTERNALS\n   */\n  _getSubEventName(path: string, eventName: string) {\n    return this.getAppEventName(`${path}-${eventName}`);\n  }\n\n  _handleStorageEvent(event: any) {\n    const { path, eventName } = event;\n    const body = event.body || {};\n\n    this.logger.debug('_handleStorageEvent: ', path, eventName, body);\n    SharedEventEmitter.emit(this._getSubEventName(path, eventName), body);\n  }\n\n  _handleStorageError(err: any) {\n    const { path, eventName } = err;\n    const body = err.body || {};\n\n    this.logger.debug('_handleStorageError ->', err);\n    SharedEventEmitter.emit(this._getSubEventName(path, eventName), body);\n  }\n\n  _addListener(path: string, eventName: string, cb: (evt: any) => any): void {\n    SharedEventEmitter.addListener(this._getSubEventName(path, eventName), cb);\n  }\n\n  _removeListener(path: string, eventName: string, origCB: (evt: any) => any): void {\n    SharedEventEmitter.removeListener(this._getSubEventName(path, eventName), origCB);\n  }\n}\n\nexport { default as StorageReference } from './reference';\nexport { StorageRef };\n"]}