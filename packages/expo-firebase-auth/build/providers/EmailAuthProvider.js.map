{"version":3,"file":"EmailAuthProvider.js","sourceRoot":"","sources":["../../src/providers/EmailAuthProvider.ts"],"names":[],"mappings":"AAEA,MAAM,cAAc,GAAG,WAAW,CAAC;AACnC,MAAM,kBAAkB,GAAG,UAAU,CAAC;AAEtC,MAAM,CAAC,OAAO,OAAO,iBAAiB;IACpC;QACE,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;IAC7F,CAAC;IAED,MAAM,KAAK,yBAAyB;QAClC,OAAO,cAAc,CAAC;IACxB,CAAC;IAED,MAAM,KAAK,6BAA6B;QACtC,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IAED,MAAM,KAAK,WAAW;QACpB,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IAED,MAAM,CAAC,UAAU,CAAC,KAAa,EAAE,QAAgB;QAC/C,OAAO;YACL,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,QAAQ;YAChB,UAAU,EAAE,kBAAkB;SAC/B,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,kBAAkB,CAAC,KAAa,EAAE,SAAiB;QACxD,OAAO;YACL,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,SAAS;YACjB,UAAU,EAAE,cAAc;SAC3B,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { AuthCredential } from '../types';\n\nconst linkProviderId = 'emailLink';\nconst passwordProviderId = 'password';\n\nexport default class EmailAuthProvider {\n  constructor() {\n    throw new Error('`new EmailAuthProvider()` is not supported on the native Firebase SDKs.');\n  }\n\n  static get EMAIL_LINK_SIGN_IN_METHOD(): string {\n    return linkProviderId;\n  }\n\n  static get EMAIL_PASSWORD_SIGN_IN_METHOD(): string {\n    return passwordProviderId;\n  }\n\n  static get PROVIDER_ID(): string {\n    return passwordProviderId;\n  }\n\n  static credential(email: string, password: string): AuthCredential {\n    return {\n      token: email,\n      secret: password,\n      providerId: passwordProviderId,\n    };\n  }\n\n  /**\n   * Initialize an EmailAuthProvider credential using an email and an email link after a sign in with email link operation.\n   * @param email Email address.\n   * @param emailLink Sign-in email link.\n   * @returns {{token: string, secret: string, providerId: string}}\n   */\n  static credentialWithLink(email: string, emailLink: string): AuthCredential {\n    return {\n      token: email,\n      secret: emailLink,\n      providerId: linkProviderId,\n    };\n  }\n}\n"]}